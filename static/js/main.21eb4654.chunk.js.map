{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["dataPlaceholder","id","name","address","category","Table","props","data","columns","tableClass","caption","cellClass","children","renderChildren","renderBody","noHeader","headerCellCallback","cellCallback","tableData","useState","Object","i","key","tableHeaders","setTableHeaders","showBody","showChildren","showHeader","useEffect","filteredColumns","a","column","k","className","styles","cellPadding","cellSpacing","onClick","style","cursor","width","header","align","headerkeys","index","row","renderTableData","App","e","console","log","target","alert","ReactDOM","render","document","getElementById"],"mappings":"6RAGMA,EAAkB,CACtB,CAAEC,GAAF,EAASC,KAAT,UAA0BC,QAA1B,aAAiDC,SAAU,YAGhDC,EAAQ,SAACC,GACpB,IAAQC,EAAoID,EAA5I,KAAcE,EAA8HF,EAA5I,QAAuBG,EAAqHH,EAA5I,WAAmCI,EAAyGJ,EAA5I,QAA4CK,EAAgGL,EAA5I,UAAuDM,EAAqFN,EAA5I,SAAiEO,EAA2EP,EAA5I,eAAiFQ,EAA2DR,EAA5I,WAA6FS,EAA+CT,EAA5I,SAAuGU,EAAqCV,EAA5I,mBAA2HW,EAAiBX,EAA5I,aACOY,EAA2BC,oBAAS,OAAAZ,QAAI,IAAJA,OAAA,EAAAA,EAAA,UAAAA,EAA3C,MACA,EAAwCY,mBAASC,OAAA,KAAYpB,EAAZ,SAAoC,SAAAqB,GAAO,MAAO,CAAEC,IAAKD,OAAnGE,EAAP,KAAqBC,EAArB,KACMC,EAAWN,mBAASL,IAA1B,GACMY,EAAeP,mBAASN,IAA9B,GACMc,EAAaR,mBAASJ,IAA5B,GA4DA,OA1DAa,qBAAU,WACR,MACMV,SAAJ,EACE,IAAI,OAAAV,QAAO,IAAPA,OAAA,EAAAA,EAAA,QAAJ,EAAyB,CACvB,IACMqB,GADgB,kBAAOrB,EAAP,KAgBrB,KAAU,SAAAsB,GACf,MAAO,CAAER,IAAKQ,MAjBV,GACwB,QAAqB,SAAAC,GAAM,OAAIX,YAAYF,EAAZE,aAAmCW,EAAvC,QACnDP,UAGAA,GAIR,EAJoCN,EAA5BM,GAKCJ,OAAA,aAAqB,SAAAY,GAC1B,MAAO,CAAEV,IAAKU,QAFlB,QAFG,CAXHJ,IA0DO,2BAAOK,UAAcC,EAAL,KAA2BzB,GAA3C,IAA2E0B,YAA3E,IAA2FC,YAAY,KAC3G1B,GAAW,iCADP,GAEJiB,GAlCO,+BACN,4BACGJ,EAAA,KAAiB,cAAmB,MACnC,OAAO,wBAAID,IAAK,MAAT,EACLe,QAAS,mBAAOrB,GAAsBA,EAA7B,IACTsB,MAAOtB,GAAsB,CAAEuB,OAAQ,WACvCC,MAAOC,QAAeA,EAAfA,MAHF,GAILC,MAAOD,QAAeA,EAAfA,MAA8B,QAJhC,OAKJA,QALI,IAKJA,GALI,UAKJA,EALI,wBAKJA,EALH,oBAgCN,+BACGhB,GArBL,WACE,IAAMkB,EAAapB,EAAA,KAAiB,SAAAF,GAAC,OAAIA,EAAJ,OACrC,OAAOH,EAAA,KAAc,cACnB,OAAO,wBAAII,IAAK,MAAQsB,GACrBxB,OAAA,gBAAwB,SAAAY,GAAC,OAAIW,WAAJ,MAAzB,KAAyD,SAAArB,GAAO,MAC/D,OAAO,wBAAIA,IAAK,MAAT,EACLe,QAAS,mBAAOpB,GAAgBA,EAAvB,IACTgB,UAAS,IAAKtB,GAFT,IAGL2B,MAAOrB,GAAgB,CAAEsB,OAAQ,WACjCG,MAAK,UAAEnB,EAAA,MAAkB,SAAAS,GAAC,OAAIA,QAAJ,YAArB,aAAE,EAAuCU,OAC7CG,EALH,WAgBSC,GACZpB,GALL,KC1CaqB,G,KA1BH,WAWV,OAAO,kBAAC,EAAD,CACLvC,QACE,CACE,CAAEc,IAAK,KAAMkB,MAAO,KAAME,MAAO,UACjC,CAAEpB,IAAK,OAAQkB,MAAO,MAAOE,MAAO,QACpC,CAAEpB,IAAK,UAAWkB,MAAO,QAI7B9B,QAAQ,6BACRM,mBApBF,SAAwBgC,GACtBC,QAAQC,IAAIF,EAAEG,QACdC,MAAM,4BCFVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.21eb4654.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './styles.module.css'\n\nconst dataPlaceholder = [\n  { id: 1, name: 'XYZ Inc', address: 'Street 100', category: 'Service' }\n]\n\nexport const Table = (props) => {\n  const { data, columns, tableClass, caption, cellClass, children, renderChildren, renderBody, noHeader, headerCellCallback, cellCallback } = props\n  const [tableData, setTableData] = useState(data?.length > 0 ? data : dataPlaceholder)\n  const [tableHeaders, setTableHeaders] = useState(Object.keys(dataPlaceholder[0]).map(i => { return { key: i } }))\n  const showBody = useState(renderBody ? renderBody : true)\n  const showChildren = useState(renderChildren ? renderChildren : true)\n  const showHeader = useState(noHeader ? noHeader : true)\n\n  useEffect(() => {\n    if (showHeader)\n      if (tableData.length > 0) {\n        if (columns?.length > 0) {\n          const headerColumns = typeof columns[0] === 'string' ? headerObject(columns) : columns\n          const filteredColumns = headerColumns.filter(column => Object.keys(tableData[0]).includes(column.key));\n          setTableHeaders(filteredColumns)\n        }\n        else\n          setTableHeaders(getDataKeys(tableData[0]))\n      }\n  }, [tableData])\n\n  function getDataKeys(row) {\n    return Object.keys(row).map(k => {\n      return { key: k }\n    })\n  }\n\n  function headerObject(array) {\n    return array.map(a => {\n      return { key: a }\n    })\n  }\n\n  function renderTableHeader() {\n    return (<thead>\n      <tr>\n        {tableHeaders.map((header, index) => {\n          return <th key={'thc' + index}\n            onClick={(e) => headerCellCallback && headerCellCallback(e)}\n            style={headerCellCallback && { cursor: 'pointer' }}\n            width={header.width ? header.width : ''}\n            align={header.align ? header.align : 'left'}>\n            {header?.key?.toUpperCase()}\n          </th>\n        })}\n      </tr>\n    </thead>)\n\n  }\n  function renderTableData() {\n    const headerkeys = tableHeaders.map(i => i.key)\n    return tableData.map((row, index) => {\n      return <tr key={'tdr' + index}>\n        {Object.keys(row).filter(k => headerkeys.includes(k)).map(key => {\n          return <td key={'trc' + key}\n            onClick={(e) => cellCallback && cellCallback(e)}\n            className={`${cellClass ? cellClass : ''}`}\n            style={cellCallback && { cursor: 'pointer' }}\n            align={tableHeaders.find(k => k.key === key)?.align}>\n            {row[key]}\n          </td>\n        })}\n      </tr>\n    })\n  }\n\n  return <table className={`${styles.react_table} ${tableClass ? tableClass : ''}`} cellPadding=\"0\" cellSpacing=\"0\">\n    {caption && <caption>{caption}</caption>}\n    {showHeader && renderTableHeader()}\n    <tbody>\n      {showBody && renderTableData()}\n      {showChildren && children}\n    </tbody>\n  </table>\n}","import React from 'react'\n\nimport { Table } from 'reactjs-table-component'\nimport 'reactjs-table-component/dist/index.css'\n\nconst App = () => {\n  function headerCallback(e) {\n    console.log(e.target)\n    alert('Header Cell Clicked')\n  }\n\n  function cellCallback(e) {\n    console.log(e.target)\n    alert('Table Body Cell Clicked')\n  }\n\n  return <Table\n    columns={\n      [\n        { key: 'id', width: \"40\", align: \"center\" },\n        { key: 'name', width: \"300\", align: \"left\" },\n        { key: 'address', width: '500' }\n      ]\n    }\n    //columns={['id', 'name']}\n    caption=\"All Companies ðŸ˜„\"\n    headerCellCallback={headerCallback}\n  // cellCallback={cellCallback}\n  />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}